select(ENTITY_CD, `LEVEL`)
#rename 'LEVEL'
data_final = inner_join(data_3_final, data_final, by = "ENTITY_CD")
data_final
#data 4 clean -> decide which grad rate to use
data_4_final = data_4 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
#need to decide which specific graduation rate to use
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_4_final$ENTITY_CD = str_c(data_4_final$first, data_4_final$second, data_4_final$third)
data_4_final$third = as.numeric(data_4_final$third)
data_4_final = data_4_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_4_final = as_tibble(data_4_final)
#select columns I want for grad rate
data_4_final = data_4_final %>%
select(ENTITY_CD, COHORT, GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)
#change to numeric so "s" values become "NA"
data_4_final$GRAD_RATE = as.numeric(data_4_final$GRAD_RATE)
data_4_final$COHORT_COUNT = as.numeric(data_4_final$COHORT_COUNT)
data_4_final$COHORT_LEVEL = as.numeric(data_4_final$COHORT_LEVEL)
#pivot_wider so I can see all the columns based on 4,5,6 year grad rate
data_4_final %>%
pivot_wider(names_from = c(COHORT, COHORT, COHORT), values_from = c(GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)) %>%
select(-COHORT_COUNT_Combined)
data_final = inner_join(data_4_final, data_final, by = "ENTITY_CD")
data_final
#Expenditures
#data_5 = read_excel("C:/Users/madel/Documents/R/471_project/expenditures_per_student.xlsx")
#N/RC
#data_8 = read_excel("C:/Users/madel/Documents/R/471_project/staff.xlsx"
data_4_final %>%
pivot_wider(names_from = c(COHORT, COHORT, COHORT), values_from = c(GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)) %>%
select(-COHORT_COUNT_Combined)
data_final = inner_join(data_4_final, data_final, by = "ENTITY_CD")
data_1_final = data_1 %>%
filter(YEAR == 2019) %>%
filter(SUBGROUP_NAME == "All Students") %>%
select(-`OVERRIDE`, -`COMPOSITE _LEVEL`, -`COMPOSITE_COHORT`) %>%
pivot_wider(names_from = `SUBJECT`, values_from = `COMPOSITE _INDEX`) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_1_final$ENTITY_CD = str_c(data_1_final$first, data_1_final$second, data_1_final$third)
data_1_final$third = as.numeric(data_1_final$third)
data_1_final = data_1_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_1_final = as_tibble(data_1_final)
data_1_final$ELA = as.numeric(data_1_final$ELA)
data_1_final$`Social Studies` = as.numeric(data_1_final$`Social Studies`)
data_1_final$Science = as.numeric(data_1_final$Science)
data_1_final$Math = as.numeric(data_1_final$Math)
data_2_final = data_2 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(SCHOOL_TYPE != 'EM') %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_2_final$ENTITY_CD = str_c(data_2_final$first, data_2_final$second, data_2_final$third)
data_2_final$third = as.numeric(data_2_final$third)
data_2_final = data_2_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_2_final = as_tibble(data_2_final)
data_2_final = data_2_final %>%
select(ENTITY_CD, OVERALL_STATUS)
data_final = inner_join(data_1_final, data_2_final, by = "ENTITY_CD")
data_final
data_3_final = data_3 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_3_final$ENTITY_CD = str_c(data_3_final$first, data_3_final$second, data_3_final$third)
data_3_final$third = as.numeric(data_3_final$third)
data_3_final = data_3_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_3_final = as_tibble(data_3_final)
data_3_final$LEVEL = as.numeric(data_3_final$LEVEL)
data_3_final = data_3_final %>%
select(ENTITY_CD, `LEVEL`)
data_final = inner_join(data_3_final, data_final, by = "ENTITY_CD")
data_final
data_4_final = data_4 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
#need to decide which specific graduation rate to use
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_4_final$ENTITY_CD = str_c(data_4_final$first, data_4_final$second, data_4_final$third)
data_4_final$third = as.numeric(data_4_final$third)
data_4_final = data_4_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_4_final = as_tibble(data_4_final)
#select columns I want for grad rate
data_4_final = data_4_final %>%
select(ENTITY_CD, COHORT, GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)
data_4_final$GRAD_RATE = as.numeric(data_4_final$GRAD_RATE)
data_4_final$COHORT_COUNT = as.numeric(data_4_final$COHORT_COUNT)
data_4_final$COHORT_LEVEL = as.numeric(data_4_final$COHORT_LEVEL)
data_4_final %>%
pivot_wider(names_from = c(COHORT, COHORT, COHORT), values_from = c(GRAD_RATE, COHORT_COUNT, COHORT_LEVEL))
data_4_final = data_4_final %>%
pivot_wider(names_from = c(COHORT, COHORT, COHORT), values_from = c(GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)) %>%
select(-COHORT_COUNT_Combined)
data_final = inner_join(data_4_final, data_final, by = "ENTITY_CD")
data_final
data_final
data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,)
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,)
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
data_5
View(data_5)
data_5_final = data_5 %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_5_final$ENTITY_CD = str_c(data_5_final$first, data_5_final$second, data_5_final$third)
data_5_final$third = as.numeric(data_5_final$third)
data_5_final = data_5_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_5_final = as_tibble(data_5_final)
View(data_5_final)
data_5_final = data_5_final %>%
filter(YEAR = 2019)
data_5_final = data_5_final %>%
filter(YEAR == 2019)
data_5_final = data_5 %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_5_final$ENTITY_CD = str_c(data_5_final$first, data_5_final$second, data_5_final$third)
data_5_final$third = as.numeric(data_5_final$third)
data_5_final = data_5_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_5_final = as_tibble(data_5_final)
data_5_final = data_5_final %>%
select(ENTITY_CD, PUPIL_COUNT_TOT, PER_FED_STATE_LOCAL_EXP)
data_final = inner_join(data_4_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
data_final
data_final = inner_join(data_5_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
col_types = c(replicate(24, "text"))
#composite
data_1 = read_excel("C:/Users/madel/Documents/R/471_project/acc_hs_composite_performance.xlsx")
#District Status
data_2 = read_excel("C:/Users/madel/Documents/R/471_project/accountability_status_subgroup.xlsx")
#CCCR
data_3 = read_excel("C:/Users/madel/Documents/R/471_project/cccr.xlsx", col_types = col_types)
#Grad Rates
data_4 = read_excel("C:/Users/madel/Documents/R/471_project/grad_rate.xlsx", col_types = col_types)
#Expenditures
data_5 = read_excel("C:/Users/madel/Documents/R/471_project/expenditures_per_student.xlsx")
#Chronic absenteeism
col_types_19 = c(replicate(19, "text"))
data_6 = read_excel("C:/Users/madel/Documents/R/471_project/absent.xlsx", col_types = col_types_19)
#staff qualifications
data_7 = read_excel("C:/Users/madel/Documents/R/471_project/staff.xlsx")
#N/RC
data_8 = read_excel("C:/Users/madel/Documents/R/471_project/staff.xlsx")
#clean data_1
data_1_final = data_1 %>%
filter(YEAR == 2019) %>%
filter(SUBGROUP_NAME == "All Students") %>%
select(-`OVERRIDE`, -`COMPOSITE _LEVEL`, -`COMPOSITE_COHORT`) %>%
pivot_wider(names_from = `SUBJECT`, values_from = `COMPOSITE _INDEX`) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_1_final$ENTITY_CD = str_c(data_1_final$first, data_1_final$second, data_1_final$third)
data_1_final$third = as.numeric(data_1_final$third)
data_1_final = data_1_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_1_final = as_tibble(data_1_final)
data_1_final$ELA = as.numeric(data_1_final$ELA)
data_1_final$`Social Studies` = as.numeric(data_1_final$`Social Studies`)
data_1_final$Science = as.numeric(data_1_final$Science)
data_1_final$Math = as.numeric(data_1_final$Math)
#clean data_2 & add to data_final
data_2_final = data_2 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(SCHOOL_TYPE != 'EM') %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_2_final$ENTITY_CD = str_c(data_2_final$first, data_2_final$second, data_2_final$third)
data_2_final$third = as.numeric(data_2_final$third)
data_2_final = data_2_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_2_final = as_tibble(data_2_final)
data_2_final = data_2_final %>%
select(ENTITY_CD, OVERALL_STATUS)
data_final = inner_join(data_1_final, data_2_final, by = "ENTITY_CD")
data_final
#clean data_3 to obtain CCCR <- 2019 'Level'
data_3_final = data_3 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_3_final$ENTITY_CD = str_c(data_3_final$first, data_3_final$second, data_3_final$third)
data_3_final$third = as.numeric(data_3_final$third)
data_3_final = data_3_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_3_final = as_tibble(data_3_final)
data_3_final$LEVEL = as.numeric(data_3_final$LEVEL)
data_3_final = data_3_final %>%
select(ENTITY_CD, `LEVEL`)
#rename 'LEVEL'
data_final = inner_join(data_3_final, data_final, by = "ENTITY_CD")
data_final
#data 4 clean
data_4_final = data_4 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
#need to decide which specific graduation rate to use
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_4_final$ENTITY_CD = str_c(data_4_final$first, data_4_final$second, data_4_final$third)
data_4_final$third = as.numeric(data_4_final$third)
data_4_final = data_4_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_4_final = as_tibble(data_4_final)
#select columns I want for grad rate
data_4_final = data_4_final %>%
select(ENTITY_CD, COHORT, GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)
#change to numeric so "s" values become "NA"
data_4_final$GRAD_RATE = as.numeric(data_4_final$GRAD_RATE)
data_4_final$COHORT_COUNT = as.numeric(data_4_final$COHORT_COUNT)
data_4_final$COHORT_LEVEL = as.numeric(data_4_final$COHORT_LEVEL)
#pivot_wider so I can see all the columns based on 4,5,6 year grad rate
data_4_final = data_4_final %>%
pivot_wider(names_from = c(COHORT, COHORT, COHORT), values_from = c(GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)) %>%
select(-COHORT_COUNT_Combined)
data_final = inner_join(data_4_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
#Expenditures
#get rid of ENTITY_CD codes which aren't for high schools
data_5_final = data_5 %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_5_final$ENTITY_CD = str_c(data_5_final$first, data_5_final$second, data_5_final$third)
data_5_final$third = as.numeric(data_5_final$third)
data_5_final = data_5_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_5_final = as_tibble(data_5_final)
data_5_final = data_5_final %>%
select(ENTITY_CD, PUPIL_COUNT_TOT, PER_FED_STATE_LOCAL_EXP)
data_final = inner_join(data_5_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
#N/RC
#data_8 = read_excel("C:/Users/madel/Documents/R/471_project/staff.xlsx"
View(data_8)
#N/RC
data_8 = read_excel("C:/Users/madel/Documents/R/471_project/NRC.xlsx")
data_8_final = data_8 %>%
filter(YEAR == 2019)  %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_8_final$ENTITY_CD = str_c(data_8_final$first, data_8_final$second, data_8_final$third)
data_8_final$third = as.numeric(data_8_final$third)
data_8_final = data_8_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_8_final = as_tibble(data_8_final)
View(data_8_final)
data_8_final = data_8_final %>%
select(ENTITY_CD, DISTRICT_CD, DISTRICT_NAME, COUNTY_CD, COUNTY_NAME, NEEDS_INDEX)
data_final = inner_join(data_8_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
#Make data_final look good
data_final = na.omit(data_final)
#rename columns
colnames(data_final)
data_final = data_final[, c(1,2,3,29,4,5,6,7,8,24,25,26,28,27,10,11,23,9,22,20,19,21,18,17,16,15,13,12,14)]
View(data_final)
#rename columns
data_final = data_final %>%
select(-SUBGROUP_NAME)
#rename columns
data_final = data_final %>%
select(-SUBGROUP_NAME, -PUPIL_COUNT_TOT)
#clean data_1
data_1_final = data_1 %>%
filter(YEAR == 2019) %>%
filter(SUBGROUP_NAME == "All Students") %>%
select(-`OVERRIDE`, -`COMPOSITE _LEVEL`, -`COMPOSITE_COHORT`) %>%
pivot_wider(names_from = `SUBJECT`, values_from = `COMPOSITE _INDEX`) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_1_final$ENTITY_CD = str_c(data_1_final$first, data_1_final$second, data_1_final$third)
data_1_final$third = as.numeric(data_1_final$third)
data_1_final = data_1_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_1_final = as_tibble(data_1_final)
data_1_final$ELA = as.numeric(data_1_final$ELA)
data_1_final$`Social Studies` = as.numeric(data_1_final$`Social Studies`)
data_1_final$Science = as.numeric(data_1_final$Science)
data_1_final$Math = as.numeric(data_1_final$Math)
#clean data_2 & add to data_final
data_2_final = data_2 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(SCHOOL_TYPE != 'EM') %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_2_final$ENTITY_CD = str_c(data_2_final$first, data_2_final$second, data_2_final$third)
data_2_final$third = as.numeric(data_2_final$third)
data_2_final = data_2_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_2_final = as_tibble(data_2_final)
data_2_final = data_2_final %>%
select(ENTITY_CD, OVERALL_STATUS)
data_final = inner_join(data_1_final, data_2_final, by = "ENTITY_CD")
data_final
#clean data_3 to obtain CCCR <- 2019 'Level'
data_3_final = data_3 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_3_final$ENTITY_CD = str_c(data_3_final$first, data_3_final$second, data_3_final$third)
data_3_final$third = as.numeric(data_3_final$third)
data_3_final = data_3_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_3_final = as_tibble(data_3_final)
data_3_final$LEVEL = as.numeric(data_3_final$LEVEL)
data_3_final = data_3_final %>%
select(ENTITY_CD, `LEVEL`)
#rename 'LEVEL'
data_final = inner_join(data_3_final, data_final, by = "ENTITY_CD")
data_final
#data 4 clean
data_4_final = data_4 %>%
filter(SUBGROUP_NAME == 'All Students') %>%
filter(YEAR == 2019) %>%
#need to decide which specific graduation rate to use
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>%
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_4_final$ENTITY_CD = str_c(data_4_final$first, data_4_final$second, data_4_final$third)
data_4_final$third = as.numeric(data_4_final$third)
data_4_final = data_4_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_4_final = as_tibble(data_4_final)
#select columns I want for grad rate
data_4_final = data_4_final %>%
select(ENTITY_CD, COHORT, GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)
#change to numeric so "s" values become "NA"
data_4_final$GRAD_RATE = as.numeric(data_4_final$GRAD_RATE)
data_4_final$COHORT_COUNT = as.numeric(data_4_final$COHORT_COUNT)
data_4_final$COHORT_LEVEL = as.numeric(data_4_final$COHORT_LEVEL)
#pivot_wider so I can see all the columns based on 4,5,6 year grad rate
data_4_final = data_4_final %>%
pivot_wider(names_from = c(COHORT, COHORT, COHORT), values_from = c(GRAD_RATE, COHORT_COUNT, COHORT_LEVEL)) %>%
select(-COHORT_COUNT_Combined)
data_final = inner_join(data_4_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
#Expenditures
#get rid of ENTITY_CD codes which aren't for high schools
data_5_final = data_5 %>%
filter(YEAR == 2019) %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_5_final$ENTITY_CD = str_c(data_5_final$first, data_5_final$second, data_5_final$third)
data_5_final$third = as.numeric(data_5_final$third)
data_5_final = data_5_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_5_final = as_tibble(data_5_final)
data_5_final = data_5_final %>%
select(ENTITY_CD, PUPIL_COUNT_TOT, PER_FED_STATE_LOCAL_EXP)
data_final = inner_join(data_5_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
#N/RC -- socioeconomic data
data_8_final = data_8 %>%
filter(YEAR == 2019)  %>%
separate(ENTITY_CD, into = c("first", "second"), sep = 6) %>% #below can be a function
separate(second, into = c("second", "third"), sep = 2) %>%
filter(second != 86)
data_8_final$ENTITY_CD = str_c(data_8_final$first, data_8_final$second, data_8_final$third)
data_8_final$third = as.numeric(data_8_final$third)
data_8_final = data_8_final %>%
filter(third != 0) %>%
select(-first, -second, -third) %>%
relocate(ENTITY_CD)
data_8_final = as_tibble(data_8_final)
data_8_final = data_8_final %>%
select(ENTITY_CD, DISTRICT_CD, DISTRICT_NAME, COUNTY_CD, COUNTY_NAME, NEEDS_INDEX)
data_final = inner_join(data_8_final, data_final, by = "ENTITY_CD")
data_final = data_final %>%
relocate(ENTITY_NAME,YEAR,SUBGROUP_NAME,) %>%
relocate(ENTITY_CD)
#Delete rows with missing values
data_final = na.omit(data_final)
#rearrange columns
colnames(data_final)
data_final = data_final[, c(1,2,3,29,4,5,6,7,8,24,25,26,28,27,10,11,23,9,22,20,19,21,18,17,16,15,13,12,14)]
data_final %>%
select(-SUBGROUP_NAME, -PUPIL_COUNT_TOT)
#rename columns
data_final = data_final %>%
select(-SUBGROUP_NAME, -PUPIL_COUNT_TOT)
colnames(data_final)
colnames(data_final)[15] <- “CCCR_LEVEL”
colnames(data_final)[15]
colnames(data_final)[15] <- "CCCR_LEVEL”
colnames(data_final)[15] = "CCCR_LEVEL”
colnames(data_final)[15] = "CCCR_LEVEL”
View(data_final)
View(data_final)
View(data_final)
data_final
colnames(data_final)
colnames(data_final)[15] = "CCCR_LEVEL"
setwd("~/R")
source("~/R/grad-rates-NY/code/1-cleaning.R", echo=TRUE)
setwd("~/R/grad-rates-NY")
source("~/R/grad-rates-NY/code/1-cleaning.R", echo=TRUE)
source("~/R/grad-rates-NY/code/2-exploration.R", echo=TRUE)
source("~/R/grad-rates-NY/code/3-train-test-split.R", echo=TRUE)
source("~/R/grad-rates-NY/code/3-train-test-split.R", echo=TRUE)
##write data to a .cvs file
write.csv(data_final, "data\\clean\\data_final.csv", row.names = FALSE)
source("~/R/grad-rates-NY/code/2-exploration.R", echo=TRUE)
source("~/R/grad-rates-NY/code/3-train-test-split.R", echo=TRUE)
source("~/R/grad-rates-NY/code/3-train-test-split.R", echo=TRUE)
source("~/R/grad-rates-NY/code/3-train-test-split.R", echo=TRUE)
source("~/R/grad-rates-NY/code/3-train-test-split.R", echo=TRUE)
source("~/R/grad-rates-NY/code/2-exploration.R", echo=TRUE)
source("~/R/grad-rates-NY/code/4-regression-modeling.R", echo=TRUE)
source("~/R/grad-rates-NY/code/5-tree-modeling.R", echo=TRUE)
source("~/R/grad-rates-NY/code/6-model-evaluation.R", echo=TRUE)
source("~/R/grad-rates-NY/code/run-all.R", echo=TRUE)
source("~/R/grad-rates-NY/code/run-all.R", echo=TRUE)
# run all steps of the analysis pipeline
#set correct working directory
source("code/0-download.R")
source("code/1-cleaning.R")
source("code/3-train-test-split.R")
